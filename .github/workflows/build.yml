# build.yml
on:
  pull_request:
    paths:
    - app/**
  push:
    paths:
    - app/**
    branches:         # array of glob patterns matching against refs/heads.  Optional; defaults to all
    - master          # triggers on pushes that contain changes in master

name: Build and Push to ECR

# https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html
env:
  AWS_DEFAULT_REGION: eu-west-2
  AWS_DEFAULT_OUTPUT: json
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CONTAINER_IMAGE: example-eks:${{ github.sha }}

jobs:
  build-and-push:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@master

    # Add steps here like linting, testing, minification, etc
      
    #- name: Setup ECR
     # run: |
        # Login to AWS ECR
     #   aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 713154802630.dkr.ecr.eu-west-2.amazonaws.com

    - name: Build and tag the image
      run: |
        # Build and tag the image
        docker build \
         -t $CONTAINER_IMAGE \
         -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE ./app
           
    # Add additional steps here like scanning of image

    # Only push to registry on master
    #- name: Push
    #  if: github.ref == 'refs/heads/master'
    #  run: |
    #    # Push image to AWS ECR
    #    docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE
    
    # Push the docker image to the Amazon ECR repo
    - name: Push build image to ECR
      id: build-image-to-ecr
      uses: jwalton/gh-ecr-push@v1
      with:
        access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region: eu-west-2
        local-image: ${CONTAINER_IMAGE}
        image: ${CONTAINER_IMAGE}
